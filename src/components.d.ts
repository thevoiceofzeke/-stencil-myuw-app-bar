/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface MyuwAppBar {
      'appName': string;
      'appUrl': string;
      'background': string;
      'color': string;
      'shadow': boolean;
      'themeName': string;
      'themeUrl': string;
    }
  }

  interface HTMLMyuwAppBarElement extends StencilComponents.MyuwAppBar, HTMLStencilElement {}

  var HTMLMyuwAppBarElement: {
    prototype: HTMLMyuwAppBarElement;
    new (): HTMLMyuwAppBarElement;
  };
  interface HTMLElementTagNameMap {
    'myuw-app-bar': HTMLMyuwAppBarElement;
  }
  interface ElementTagNameMap {
    'myuw-app-bar': HTMLMyuwAppBarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'myuw-app-bar': JSXElements.MyuwAppBarAttributes;
    }
  }
  namespace JSXElements {
    export interface MyuwAppBarAttributes extends HTMLAttributes {
      'appName'?: string;
      'appUrl'?: string;
      'background'?: string;
      'color'?: string;
      'shadow'?: boolean;
      'themeName'?: string;
      'themeUrl'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;